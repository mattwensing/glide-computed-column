{
  "version": 3,
  "sources": ["../src/glide.ts", "../src/cache.ts", "../src/column.ts"],
  "sourcesContent": ["type ColumnType = \"string\" | \"primitive\" | \"number\" | \"image-uri\" | \"uri\";\n\nexport type StringColumnValue = { type: \"string\"; value?: string };\n\nexport type ColumnParam = {\n  name: string;\n  displayName: string;\n  type: ColumnType;\n};\n\nexport type ColumnValue =\n  | { type: \"primitive\"; value?: any }\n  | { type: \"number\"; value?: number }\n  | StringColumnValue;\n\nexport type Column = (...values: ColumnValue[]) => Promise<any | undefined>;\n\nfunction convert(x: any) {\n  if (x instanceof Date) {\n    return x.toISOString();\n  } else if (Array.isArray(x)) {\n    return x.map(convert);\n  } else {\n    return x;\n  }\n}\n\nexport async function listen(event: MessageEvent<any>, main: Column) {\n  const {\n    // origin,\n    data: { key, params },\n  } = event;\n\n  let result;\n  let error;\n  try {\n    result = await main(...params);\n  } catch (e) {\n    result = undefined;\n    try {\n      error = e.toString();\n    } catch (e) {\n      error = \"Exception can't be stringified.\";\n    }\n  }\n\n  const response: any = { key };\n  if (result !== undefined) {\n    result = convert(result);\n    response.result = { type: \"string\", value: result };\n  }\n  if (error !== undefined) {\n    response.error = error;\n  }\n\n  // TODO fix this type\n  (event.source?.postMessage as any)(response, \"*\");\n}\n\nexport type Manifest = {\n  name: string;\n  description: string;\n  author: string;\n  params: ColumnParam[];\n  result: { type: ColumnType };\n  icon: string;\n  about?: string;\n  video?: string;\n};\n\nexport type ManifestConvenient<T> = Omit<Manifest, \"params\" | \"icon\"> & {\n  params: { [Name in keyof T]: Omit<ColumnParam, \"name\"> };\n  icon?: \"glide\" | string;\n};\n\nexport type ColumnDefinition<TColumnParams> =\n  ManifestConvenient<TColumnParams> & {\n    run: Column;\n    example?: Partial<TColumnParams>;\n  };\n\nexport function column<TColumnParams>(\n  manifest: ColumnDefinition<TColumnParams>\n): ColumnDefinition<TColumnParams> & { json: string } {\n  // We run this code in node to output manifests, so check for window.\n  if (typeof window !== \"undefined\") {\n    window.addEventListener(\"message\", (e) => listen(e, manifest.run));\n  }\n\n  return {\n    ...manifest,\n    json: JSON.stringify(toStrictManifest(manifest), null, 2),\n  };\n}\n\nconst glideIcon = `\n        <svg\n          width=\"48\"\n          height=\"48\"\n          viewBox=\"0 0 26 27\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M0 14.85L14.3 0V7.29C14.3 11.4653 11.0406 14.85 7.02 14.85H0Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M11.7 19.71C11.7 15.5347 14.9594 12.15 18.98 12.15H26L11.7 27V19.71Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n    `;\n\nconst defaultIcon = `<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.0002 34.828L2.58624 25.414C1.80524 24.633 1.80524 23.367 2.58624 22.586L12.0002 13.172L14.8292 16L6.82924 24L14.8292 32L12.0002 34.828Z\" fill=\"currentColor\"/>\n<path d=\"M36.0004 34.828L33.1714 32L41.1714 24L33.1714 16L36.0004 13.172L45.4144 22.586C46.1954 23.367 46.1954 24.633 45.4144 25.414L36.0004 34.828Z\" fill=\"currentColor\"/>\n<path d=\"M26.5485 5.57617L17.5723 41.4553L21.4527 42.4261L30.4289 6.54697L26.5485 5.57617Z\" fill=\"currentColor\"/>\n</svg>`;\n\nexport function toStrictManifest(\n  convenient: ManifestConvenient<any>\n): Manifest {\n  // We carefully pick out just the props in manifest, because more\n  // could come in from the component.\n  const { name, description, author, result, params, about, video } =\n    convenient;\n\n  let { icon = defaultIcon } = convenient;\n  if (icon === \"glide\") {\n    icon = glideIcon;\n  }\n\n  return {\n    name,\n    description,\n    author,\n    result,\n    about,\n    icon,\n    video,\n    params: Object.entries(params).map(([name, param]) => ({\n      name,\n      ...param,\n    })),\n  };\n}\n", "type CacheItem<T> = { timestamp: Date; item: T };\n\ninterface Props {\n  timeoutSeconds: number;\n}\n\nconst defaultProps: Props = {\n  timeoutSeconds: 10,\n};\n\nfunction elapsedSeconds(date: Date): number {\n  return (new Date().getTime() - date.getTime()) / 1000;\n}\n\nexport class Cache<T = any> {\n  private props: Props;\n  private cache = new Map<string, CacheItem<T>>();\n\n  constructor(props: Partial<Props> = defaultProps) {\n    this.props = { ...props, ...defaultProps };\n  }\n\n  async get(key: string): Promise<T | undefined> {\n    const { timestamp, item } = this.cache.get(key) ?? {\n      timestamp: new Date(0),\n    };\n    if (elapsedSeconds(timestamp) < this.props.timeoutSeconds) {\n      return item;\n    } else {\n      this.cache.delete(key);\n      return undefined;\n    }\n  }\n\n  async getWith(key: string, work: (key: string) => Promise<T>): Promise<T> {\n    const { timestamp, item } = this.cache.get(key) ?? {\n      timestamp: new Date(0),\n    };\n    if (elapsedSeconds(timestamp) < this.props.timeoutSeconds) {\n      return item!;\n    } else {\n      const found = await work(key);\n      this.set(key, found);\n      return found;\n    }\n  }\n\n  set(key: string, item: T) {\n    return this.cache.set(key, { timestamp: new Date(), item });\n  }\n\n  async fetch(url: string, key = url): Promise<T> {\n    return await this.getWith(key, () => fetch(url).then((x) => x.json()));\n  }\n}\n", "import * as glide from \"./glide\";\nimport { Cache } from \"./cache\";\n\nconst cache = new Cache();\n\nexport default glide.column({\n  name: \"Mortgage Calculator\",\n  description: \"Calculates total costs of refinancing based on market assumptions.\",\n  author: \"Matt Wensing <matt@usesummit.com>\",\n  params: {\n    summitApiKey: {\n      displayName: \"Summit API Key\",\n      type: \"string\"\n    },\n    purchasePrice: {\n      displayName: \"Purchase Price\",\n      type: \"number\"\n    },\n    loan: {\n      displayName: \"Loan Amount\",\n      type: \"number\"\n    },\n    rate: {\n      displayName: \"Interest Rate (%)\",\n      type: \"number\"\n    },\n    homePrice: {\n      displayName: \"Home Price\",\n      type: \"number\"\n    },\n    homeAppreciation: {\n      displayName: \"Home Appreciation Rate (%)\",\n      type: \"number\"\n    },\n    additionalMonthlyPayment: {\n      displayName: \"Additional Monthly Payment\",\n      type: \"number\"\n    },\n    years: {\n      displayName: \"Loan Term (Years)\",\n      type: \"number\"\n    },\n    propertyTaxRate: {\n      displayName: \"Property Tax Rate (%)\",\n      type: \"number\"\n    },\n    propTaxIncreaseRate: {\n      displayName: \"Property Tax Increase Rate (%)\",\n      type: \"number\"\n    },\n    taxDiscountRate: {\n      displayName: \"Tax Discount Rate (%)\",\n      type: \"number\"\n    }\n  },\n  result: { type: \"string\" },\n\n  async run(loan, rate, homePrice, homeAppreciation, additionalMonthlyPayment, years, propertyTaxRate, propTaxIncreaseRate, taxDiscountRate, summitApiKey) {\n\n    // Bail if this isn't defined.  Expand to others.\n    if (loan.value === undefined) {\n      return undefined;\n    }\n\n    const apiUrl = `https://api.usesummit.com/v1/free-calculators/b79052/the-home-mortgage-calculator/`;\n\n    const modelData = await cache.fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Api-Key': summitApiKey\n      },\n      body: JSON.stringify({\n        \"parameters\": {\n          \"loan\": loan.value,\n          \"rate\": rate.value,\n          \"home_price\": homePrice.value,\n          \"home_appreciation\": homeAppreciation.value,\n          \"additional_monthly_payment\": additionalMonthlyPayment.value,\n          \"years\": years.value,\n          \"property_tax_rate\": propertyTaxRate.value,\n          \"prop_tax_increase_rate\": propTaxIncreaseRate.value,\n          \"tax_discount_rate\": taxDiscountRate.value\n        }\n      })\n    });\n\n    // Filter results that have a 'values' property, then extract 'total_accrued_interest'\n    const filteredResults = modelData.results.filter(r => r.values !== undefined);\n    const lastResult = filteredResults[filteredResults.length - 1];\n    let totalAccruedInterest: number;\n\n    if (lastResult && lastResult.values) {\n        totalAccruedInterest = Math.round(lastResult.values.total_accrued_interest);\n    } else {\n        totalAccruedInterest = 0; // or handle this case as you see fit\n    }\n\n    return JSON.stringify(totalAccruedInterest);\n\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
